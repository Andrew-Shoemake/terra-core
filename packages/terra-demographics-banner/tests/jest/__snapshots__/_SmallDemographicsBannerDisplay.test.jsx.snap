// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies the theme context className 1`] = `
<ThemeContextProvider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  theme={
    Object {
      "className": "orion-fusion-theme",
    }
  }
>
  <InjectIntl(SmallDemographicsBannerDisplay)>
    <SmallDemographicsBannerDisplay
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": null,
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
    >
      <section
        className="demographics-banner orion-fusion-theme"
        tabIndex={-1}
      >
        <div
          className="small-content"
        >
          <div
            className="column"
          >
            <h1
              className="person-name"
            >
              <span />
            </h1>
          </div>
          <div
            className="person-details"
          >
            <DemographicsBannerValue
              key="adminSex"
              value=""
              valueAriaHidden={false}
            >
              <span
                className="value"
              >
                <span
                  aria-hidden={false}
                  className="value-text"
                />
              </span>
            </DemographicsBannerValue>
          </div>
          <div
            className="identifiers"
          />
          <div
            className="application-content"
          />
        </div>
      </section>
    </SmallDemographicsBannerDisplay>
  </InjectIntl(SmallDemographicsBannerDisplay)>
</ThemeContextProvider>
`;

exports[`renders small banner that contains all valid information 1`] = `
<SmallDemographicsBannerDisplay
  administrativeSex={
    Object {
      "ariaLabel": "Male",
      "isBirthSexMismatch": true,
      "value": "Male",
    }
  }
  administrativeSexFullText="Administrative Sex"
  age={
    Object {
      "ariaLabel": "25 Years Old.",
      "value": "25 Years",
    }
  }
  applicationContent={
    <span
      className="risk-score"
    >
      5%
    </span>
  }
  dateOfBirth={
    Object {
      "ariaLabel": "May 9, 1993",
      "value": "May 9, 1993",
    }
  }
  dateOfBirthLabel="DOB"
  deceasedDateLabel="Deceased"
  gestationalAgeLabel="GA"
  identifiers={
    Array [
      Object {
        "ariaLabel": "MRN 1 2 3 4 5",
        "label": "MRN",
        "value": "12343",
      },
      Object {
        "ariaLabel": "R E A 3JSDA",
        "label": "REA",
        "value": "3JSDA",
      },
    ]
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  personName="Johnathon Doe"
  photo=""
  postMenstrualAgeLabel="PMA"
  preferredFirstName="John"
  sexMismatchFullText="Sex Mismatch"
/>
`;
