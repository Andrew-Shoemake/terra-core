// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Button should render a block split type 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={true}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral is-block"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render a compact split type 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={true}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral is-compact"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral is-compact"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render a default split type 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render a disabled split type 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  disabled={true}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render a split type with custom attributes 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  other-custom-attribute="purple"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
  test-custom-attribute={true}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render a split type with multiple children 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    Array [
      <Item
        label="1st Option"
        onSelect={[Function]}
      />,
      <Item
        label="2nd Option"
        onSelect={[Function]}
      />,
      <Item
        label="3rd Option"
        onSelect={[Function]}
      />,
    ]
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;

exports[`Dropdown Button should render an open split type 1`] = `
<OnClickOutside(DropdownButtonBase)
  buttonRef={[Function]}
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isBlock={false}
  isCompact={false}
  isDisabled={false}
  isKeyboardEvent={false}
  isOpen={false}
  items={
    <Item
      label="1st Option"
      onSelect={[Function]}
    />
  }
  onClickOutside={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  position="bottom"
  preventDefault={false}
  refCallback={[Function]}
  requestClose={[Function]}
  stopPropagation={false}
>
  <button
    aria-disabled={false}
    className="split-button-primary neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    Primary Option
  </button>
  <button
    aria-disabled={false}
    aria-expanded={false}
    aria-haspopup="menu"
    aria-label="Terra.dropdownButton.moreOptions"
    className="split-button-caret neutral"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    type="button"
  >
    <span
      className="caret-icon"
    />
  </button>
</OnClickOutside(DropdownButtonBase)>
`;
