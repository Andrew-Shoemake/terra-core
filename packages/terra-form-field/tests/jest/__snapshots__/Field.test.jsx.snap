// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a field error message 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a field help message 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  >
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render a field in error 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
  </div>
  <div
    className="field-content"
  >
    <div
      aria-live="assertive"
      className="error-text"
      id="test-error"
      tabIndex="-1"
    >
      Error Text
    </div>
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render a field label 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a field label with legend 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  >
    <legend
      className="legend"
    >
      Feild Label with legend
    </legend>
  </div>
</div>
`;

exports[`should render a field with a Select 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Select
      key=".0"
    >
      <select />
    </Select>
  </div>
</div>
`;

exports[`should render a field with a Textarea 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Textarea
      key=".0"
    >
      <textarea />
    </Textarea>
  </div>
</div>
`;

exports[`should render a field with a custom error icon 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconHelp
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a field with a hidden label 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a field with a hidden label in error 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
  </div>
  <div
    className="field-content"
  >
    <div
      aria-live="assertive"
      className="error-text"
      id="test-error"
      tabIndex="-1"
    >
      Error Text
    </div>
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render a field with a hidden legend 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  >
    <legend
      className="legend visually-hidden-text"
    >
      Hidden Legend
    </legend>
  </div>
</div>
`;

exports[`should render a field with an Input 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Input
      key=".0"
    >
      <input />
    </Input>
  </div>
</div>
`;

exports[`should render a required field in error 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
  </div>
  <div
    className="field-content"
  >
    <div
      aria-live="assertive"
      className="error-text"
      id="test-error"
      tabIndex="-1"
    >
      Error Text
    </div>
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render a required field label 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a required field label with required hidden 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
      <div
        className="required-hidden"
      >
        *
      </div>
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a required field with a Select 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Select
      key=".0"
      required={true}
    >
      <select
        required={true}
      />
    </Select>
  </div>
</div>
`;

exports[`should render a required field with a Textarea 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Textarea
      key=".0"
      required={true}
    >
      <textarea
        required={true}
      />
    </Textarea>
  </div>
</div>
`;

exports[`should render a required field with a hidden label 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;

exports[`should render a required field with a hidden label in error 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group label-group-hidden"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
  </div>
  <div
    className="field-content"
  >
    <div
      aria-live="assertive"
      className="error-text"
      id="test-error"
      tabIndex="-1"
    >
      Error Text
    </div>
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render a required field with an Input 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      <div
        className="required"
      >
        *
      </div>
      Field Label
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <IconBase
          ariaLabel={null}
          className="IconError"
          focusable="false"
          height="1em"
          isBidi={false}
          isSpin={false}
          viewBox="0 0 48 48"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <svg
            aria-hidden="true"
            className="tui-Icon icon IconError"
            focusable="false"
            height="1em"
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
              fill="#E50000"
            />
            <path
              d="M7 21.5h34v5H7v-5z"
              fill="#FFF"
            />
          </svg>
        </IconBase>
      </IconError>
    </div>
  </div>
  <div
    className="field-content"
  >
    <Input
      key=".0"
      required={true}
    >
      <input
        required={true}
      />
    </Input>
  </div>
</div>
`;

exports[`should render an inline field with most of the possible props are passed into it 1`] = `
<div
  className="field-top field-inline-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top healtheintent-legend"
      htmlFor="test"
    >
      Text
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  >
    <input
      id="test"
      key=".0"
      type="text"
    />
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      This is a test input
    </div>
  </div>
</div>
`;

exports[`should render an invalid and required field with a Select 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={true}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        <div
          className="required"
        >
          *
        </div>
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Select
        isInvalid={true}
        key=".0"
        required={true}
      >
        <select
          invalid="true"
          required={true}
        />
      </Select>
    </div>
  </div>
</Field>
`;

exports[`should render an invalid and required field with a Textarea 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={true}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        <div
          className="required"
        >
          *
        </div>
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Textarea
        isInvalid={true}
        key=".0"
        required={true}
      >
        <textarea
          invalid="true"
          required={true}
        />
      </Textarea>
    </div>
  </div>
</Field>
`;

exports[`should render an invalid and required field with an Input 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={true}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        <div
          className="required"
        >
          *
        </div>
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Input
        isInvalid={true}
        key=".0"
        required={true}
      >
        <input
          invalid="true"
          required={true}
        />
      </Input>
    </div>
  </div>
</Field>
`;

exports[`should render an invalid field with a Select 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Select
        isInvalid={true}
        key=".0"
      >
        <select
          invalid="true"
        />
      </Select>
    </div>
  </div>
</Field>
`;

exports[`should render an invalid field with an Input 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Input
        isInvalid={true}
        key=".0"
      >
        <input
          invalid="true"
        />
      </Input>
    </div>
  </div>
</Field>
`;

exports[`should render an invalid field with an Textarea 1`] = `
<Field
  alignLabel="top"
  error={null}
  errorIcon={
    <IconError
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
    />
  }
  help={null}
  hideRequired={false}
  htmlFor="test"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isInline={false}
  isInvalid={true}
  isLabelHidden={false}
  isLegendHidden={false}
  label="Field Label"
  labelAttrs={Object {}}
  required={false}
  showOptional={false}
>
  <div
    className="field-top"
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <div
      className="label-group"
    >
      <div
        className="error-icon"
      >
        <IconError
          viewBox="0 0 48 48"
          xmlns="http://www.w3.org/2000/svg"
        >
          <IconBase
            ariaLabel={null}
            className="IconError"
            focusable="false"
            height="1em"
            isBidi={false}
            isSpin={false}
            viewBox="0 0 48 48"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <svg
              aria-hidden="true"
              className="tui-Icon icon IconError"
              focusable="false"
              height="1em"
              viewBox="0 0 48 48"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"
                fill="#E50000"
              />
              <path
                d="M7 21.5h34v5H7v-5z"
                fill="#FFF"
              />
            </svg>
          </IconBase>
        </IconError>
      </div>
      <label
        className="label-top"
        htmlFor="test"
      >
        Field Label
      </label>
    </div>
    <div
      className="field-content"
    >
      <Textarea
        isInvalid={true}
        key=".0"
      >
        <textarea
          invalid="true"
        />
      </Textarea>
    </div>
  </div>
</Field>
`;

exports[`should render an optional field in error 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <div
      className="error-icon"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
      <FormattedMessage
        id="Terra.form.field.optional"
        values={Object {}}
      >
        <Component />
      </FormattedMessage>
    </label>
  </div>
  <div
    className="field-content"
  >
    <div
      aria-live="assertive"
      className="error-text"
      id="test-error"
      tabIndex="-1"
    >
      Error Text
    </div>
    <div
      className="help-text"
      id="test-help"
      tabIndex="-1"
    >
      Help Text
    </div>
  </div>
</div>
`;

exports[`should render an optional field label 1`] = `
<div
  className="field-top"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="label-group"
  >
    <label
      className="label-top"
      htmlFor="test"
    >
      Field Label
      <FormattedMessage
        id="Terra.form.field.optional"
        values={Object {}}
      >
        <Component />
      </FormattedMessage>
    </label>
    <div
      className="error-icon-hidden"
    >
      <IconError
        viewBox="0 0 48 48"
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
  <div
    className="field-content"
  />
</div>
`;
